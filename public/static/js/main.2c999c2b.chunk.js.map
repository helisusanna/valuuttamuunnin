{"version":3,"sources":["App.js","index.js"],"names":["useStyles","makeStyles","theme","gridItem","margin","spacing","form","maxWidth","header","marginBottom","App","useState","euromaara","setEuromaara","valittuValuutta","setValittuValuutta","tulos","setTulos","haetutValuutat","virhe","tiedotHaettu","data","setData","haeTiedot","a","fetch","yhteys","json","tiedot","useEffect","classes","Container","fixed","Typography","variant","className","Grid","container","item","xs","FormControl","fullWidth","InputLabel","htmlFor","Input","type","onChange","e","target","value","startAdornment","InputAdornment","position","Select","native","select","valuutta","rates","push","haevaluutat","Button","color","onClick","kerroin","laske","toFixed","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2c999c2b.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\n\nimport { Container,\n        Typography,\n        Grid,\n        FormControl,\n        Input,\n        InputLabel,\n        InputAdornment,\n        Select,\n        Button, } from \"@material-ui/core\"\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  gridItem: {\n    margin: theme.spacing(2),\n  },\n  form: {\n    maxWidth: \"380px\"\n  },\n  header: {\n    marginBottom: theme.spacing(3),\n  }\n}));\n\nfunction App() {\n\n  const [euromaara, setEuromaara] = useState(\"\");\n  const [valittuValuutta, setValittuValuutta] = useState(\"\");\n  const [tulos, setTulos] = useState(\"\");\n  const [data, setData] = useState({\n    haetutValuutat : [],\n    virhe : null,\n    tiedotHaettu: false\n  });\n\n  const haeTiedot = async () => {\n\n    try {\n\n      const yhteys = await fetch(\"http://api.exchangeratesapi.io/v1/latest?access_key=580bc4f076b0cee3db10de2ece11a4ac\");\n      const tiedot = await yhteys.json();\n  \n      setData({\n                ...data,\n                haetutValuutat : tiedot,\n                tiedotHaettu : true\n              });\n\n    } catch (e) {\n\n      setData({\n                ...data,\n                virhe : `Palvelimeen ei saatu yhteyttä`,\n                tiedotHaettu : true\n              });\n\n    }\n\n  }\n\n  useEffect(() => {\n    haeTiedot();\n  }, []);\n\n  const haevaluutat = () => {\n    let select = [];\n    for(const valuutta in data.haetutValuutat.rates){\n      select.push(<option value={`${valuutta}`}>{`${valuutta} (${data.haetutValuutat.rates[valuutta]})`}</option>)\n    }\n    return select\n  }\n  \n  const laskeMuunnos = () => {\n\n    let kerroin = 0;\n\n    for(const valuutta in data.haetutValuutat.rates){\n\n      if(valuutta == valittuValuutta){\n        kerroin = data.haetutValuutat.rates[valuutta]\n      }\n\n    }\n\n    let laske = kerroin * euromaara;\n    laske = laske.toFixed(2);\n\n    setTulos(`Muunnoksen tulos: ${euromaara} EUR = ${laske} ${valittuValuutta}`);\n    \n  }\n  const classes = useStyles();\n\n  return (\n    <Container fixed>\n      <Typography variant=\"h5\" className={classes.header}>Valuuttamuunnin</Typography>\n\n      <Grid container>\n\n        <Grid item xs={12} className={classes.gridItem}>\n          <FormControl fullWidth className={classes.form}>\n              <InputLabel htmlFor=\"standard-adornment-amount\">Muunnettava euromäärä</InputLabel>\n              <Input\n                type=\"number\"\n                onChange={(e) => {\n                  setEuromaara(e.target.value);\n                }}      \n                startAdornment={<InputAdornment position=\"start\">€</InputAdornment>}\n              />\n          </FormControl>\n        </Grid>\n\n        <Grid item xs={12} className={classes.gridItem}>\n          {(!data.tiedotHaettu)\n          ? <Typography>Tietoja haetaan, odota hetki...</Typography>\n          : (!data.virhe)\n            ? <FormControl fullWidth className={classes.form}>\n                <InputLabel htmlFor=\"standard-adornment-amount\">Muunna valuutaksi</InputLabel>\n                <Select\n                  native\n                  value={valittuValuutta} \n                  onChange={(e) => {setValittuValuutta(e.target.value);}}\n                >\n                  <option aria-label=\"Ei valittu\" value=\"\" />\n                  {haevaluutat()}\n                </Select>\n              </FormControl>\n            : <Typography>{data.virhe}</Typography>\n          }\n         </Grid>\n\n         <Grid item xs={12} className={classes.gridItem}>\n            <Button variant=\"contained\" color=\"secondary\" onClick={laskeMuunnos}>\n              Laske valuuttamuunnos\n            </Button>\n          </Grid>\n\n          <Grid item xs={12} className={classes.gridItem}>\n            {(!tulos)\n            ? null\n            : <Typography>{tulos}</Typography>\n            }\n          </Grid>\n      </Grid>\n\n    </Container>\n  );\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'fontsource-roboto';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}